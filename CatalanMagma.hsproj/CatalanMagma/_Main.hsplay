-- Haskell Playground 1.0
let x = (Gen :*: Gen) :*: (Gen :*: Gen)
let y = Gen :*: Gen :*: Gen :*: Gen
y

fromFree x :: PermAvoiding321
fromFree y :: PermAvoiding321

fromFree x :: DyckWord
fromFree y :: DyckWord

enumerate 4 :: [PreorderTree]

toFree (fromFree x :: DyckWord)

let xd = fromFree x :: DyckWord
xd
toOther xd :: PermAvoiding321

let t = enumerate 5 :: [PreorderTree]
t

all (\m -> m == toOther m) $ t
